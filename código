import tkinter as tk
from tkinter import messagebox

# FunÃ§Ãµes principais

def mensagem_boas_vindas(nome, idade, cidade, estado):
    if idade < 18:
        msg = "Ã‰ Ã³timo ver jovens interessados na leitura!"
    elif idade < 60:
        msg = "ParabÃ©ns por continuar cultivando o hÃ¡bito da leitura!"
    else:
        msg = "Ã‰ inspirador ver sua dedicaÃ§Ã£o Ã  leitura!"
    return f"OlÃ¡, {nome}! Seja bem-vindo(a)!\n{msg}\nSua jornada literÃ¡ria em {cidade}, {estado} serÃ¡ incrÃ­vel!"

def estimativa_livros_futuros(livros_digitais, livros_fisicos):
    total_atual = livros_digitais + livros_fisicos
    total_futuro = total_atual * 5
    if total_atual >= 20:
        feedback = "VocÃª estÃ¡ lendo muito bem! Mantenha esse ritmo incrÃ­vel! ğŸ“š"
    elif total_atual >= 10:
        feedback = "Bom trabalho! Que tal tentar ler um pouco mais esse ano?"
    else:
        feedback = "VocÃª pode aumentar esse nÃºmero com pequenas mudanÃ§as de hÃ¡bito."
    return f"Estimativa de livros em 5 anos: {total_futuro}\n{feedback}"

def estimar_tempo_anual(horas_por_semana, tipo):
    horas_anuais = horas_por_semana * 52
    return f"VocÃª dedica cerca de {horas_anuais:.1f} horas por ano Ã  leitura para {tipo}."

def recomendar_leitura(preferencia, idade):
    if preferencia.lower() == "digital":
        if idade < 30:
            return "Tente explorar eBooks interativos ou audiobooks tambÃ©m!"
        else:
            return "O Kindle Ã© Ã³timo, mas que tal experimentar alguns livros fÃ­sicos tambÃ©m?"
    else:
        return "Ler livros fÃ­sicos Ã© maravilhoso! Mas eBooks podem ser prÃ¡ticos em viagens."

def equilibrio_leitura(horas_estudo, horas_lazer):
    if horas_estudo > horas_lazer:
        return "VocÃª dedica mais tempo aos estudos do que ao lazer. Tente equilibrar."
    elif horas_estudo < horas_lazer:
        return "Legal! VocÃª lÃª mais por lazer. Isso Ã© Ã³timo para manter o hÃ¡bito leve."
    else:
        return "Perfeito! Seu tempo estÃ¡ bem equilibrado entre estudo e diversÃ£o."

# FunÃ§Ã£o chamada ao clicar no botÃ£o
def processar_dados():
    try:
        nome = entry_nome.get()
        idade = int(entry_idade.get())
        cidade = entry_cidade.get()
        estado = entry_estado.get()
        livros_digitais = int(entry_digitais.get())
        livros_fisicos = int(entry_fisicos.get())
        preferencia = entry_preferencia.get()
        horas_estudo = float(entry_estudo.get())
        horas_lazer = float(entry_lazer.get())
        genero = entry_genero.get()

        mensagem = mensagem_boas_vindas(nome, idade, cidade, estado)
        estimativa = estimativa_livros_futuros(livros_digitais, livros_fisicos)
        estudo = estimar_tempo_anual(horas_estudo, "estudo")
        lazer = estimar_tempo_anual(horas_lazer, "entretenimento")
        recomendacao = recomendar_leitura(preferencia, idade)
        equilibrio = equilibrio_leitura(horas_estudo, horas_lazer)

        resultado = f"{mensagem}\n\n{estimativa}\n\n{estudo}\n{lazer}\n\n{recomendacao}\n{equilibrio}\n\nContinue lendo seus livros de {genero}, {nome}! ğŸ“–âœ¨"
        messagebox.showinfo("RelatÃ³rio de Leitura", resultado)
    except ValueError:
        messagebox.showerror("Erro", "Verifique se todos os campos numÃ©ricos estÃ£o corretos.")

# Interface Tkinter
root = tk.Tk()
root.title("HÃ¡bitos de Leitura")
root.geometry("400x600")

labels = [
    "Nome", "Idade", "Cidade", "Estado",
    "Livros digitais (Ãºltimo ano)", "Livros fÃ­sicos (Ãºltimo ano)",
    "PreferÃªncia (Digital ou FÃ­sica)", "Horas semanais de estudo",
    "Horas semanais de lazer", "GÃªnero literÃ¡rio favorito"
]

entries = []
for label in labels:
    tk.Label(root, text=label).pack()
    entry = tk.Entry(root)
    entry.pack(pady=2)
    entries.append(entry)

(entry_nome, entry_idade, entry_cidade, entry_estado,
 entry_digitais, entry_fisicos, entry_preferencia,
 entry_estudo, entry_lazer, entry_genero) = entries

tk.Button(root, text="Gerar RelatÃ³rio", command=processar_dados).pack(pady=20)

root.mainloop()
